// Code generated by ent, DO NOT EDIT.

package rechargecampaignruleoversea

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the rechargecampaignruleoversea type in the database.
	Label = "recharge_campaign_rule_oversea"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldUpdatedBy holds the string denoting the updated_by field in the database.
	FieldUpdatedBy = "updated_by"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldDollarPrice holds the string denoting the dollar_price field in the database.
	FieldDollarPrice = "dollar_price"
	// FieldRmbPrice holds the string denoting the rmb_price field in the database.
	FieldRmbPrice = "rmb_price"
	// FieldOriginalRmbPrice holds the string denoting the original_rmb_price field in the database.
	FieldOriginalRmbPrice = "original_rmb_price"
	// FieldTotalCep holds the string denoting the total_cep field in the database.
	FieldTotalCep = "total_cep"
	// FieldBeforeDiscountCep holds the string denoting the before_discount_cep field in the database.
	FieldBeforeDiscountCep = "before_discount_cep"
	// FieldDiscountRatio holds the string denoting the discount_ratio field in the database.
	FieldDiscountRatio = "discount_ratio"
	// Table holds the table name of the rechargecampaignruleoversea in the database.
	Table = "recharge_campaign_rule_overseas"
)

// Columns holds all SQL columns for rechargecampaignruleoversea fields.
var Columns = []string{
	FieldID,
	FieldCreatedBy,
	FieldUpdatedBy,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldDollarPrice,
	FieldRmbPrice,
	FieldOriginalRmbPrice,
	FieldTotalCep,
	FieldBeforeDiscountCep,
	FieldDiscountRatio,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedBy holds the default value on creation for the "created_by" field.
	DefaultCreatedBy int64
	// DefaultUpdatedBy holds the default value on creation for the "updated_by" field.
	DefaultUpdatedBy int64
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt time.Time
	// DefaultDollarPrice holds the default value on creation for the "dollar_price" field.
	DefaultDollarPrice float64
	// DefaultRmbPrice holds the default value on creation for the "rmb_price" field.
	DefaultRmbPrice float64
	// DefaultOriginalRmbPrice holds the default value on creation for the "original_rmb_price" field.
	DefaultOriginalRmbPrice float64
	// DefaultTotalCep holds the default value on creation for the "total_cep" field.
	DefaultTotalCep int64
	// DefaultBeforeDiscountCep holds the default value on creation for the "before_discount_cep" field.
	DefaultBeforeDiscountCep int64
	// DefaultDiscountRatio holds the default value on creation for the "discount_ratio" field.
	DefaultDiscountRatio int64
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() int64
)

// OrderOption defines the ordering options for the RechargeCampaignRuleOversea queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreatedBy orders the results by the created_by field.
func ByCreatedBy(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedBy, opts...).ToFunc()
}

// ByUpdatedBy orders the results by the updated_by field.
func ByUpdatedBy(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedBy, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByDeletedAt orders the results by the deleted_at field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}

// ByDollarPrice orders the results by the dollar_price field.
func ByDollarPrice(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDollarPrice, opts...).ToFunc()
}

// ByRmbPrice orders the results by the rmb_price field.
func ByRmbPrice(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRmbPrice, opts...).ToFunc()
}

// ByOriginalRmbPrice orders the results by the original_rmb_price field.
func ByOriginalRmbPrice(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOriginalRmbPrice, opts...).ToFunc()
}

// ByTotalCep orders the results by the total_cep field.
func ByTotalCep(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTotalCep, opts...).ToFunc()
}

// ByBeforeDiscountCep orders the results by the before_discount_cep field.
func ByBeforeDiscountCep(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBeforeDiscountCep, opts...).ToFunc()
}

// ByDiscountRatio orders the results by the discount_ratio field.
func ByDiscountRatio(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDiscountRatio, opts...).ToFunc()
}
