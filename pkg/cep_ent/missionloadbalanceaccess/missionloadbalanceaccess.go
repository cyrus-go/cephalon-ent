// Code generated by ent, DO NOT EDIT.

package missionloadbalanceaccess

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the missionloadbalanceaccess type in the database.
	Label = "mission_load_balance_access"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldUpdatedBy holds the string denoting the updated_by field in the database.
	FieldUpdatedBy = "updated_by"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldMissionID holds the string denoting the mission_id field in the database.
	FieldMissionID = "mission_id"
	// FieldMissionLoadBalanceID holds the string denoting the mission_load_balance_id field in the database.
	FieldMissionLoadBalanceID = "mission_load_balance_id"
	// FieldLastAccess holds the string denoting the last_access field in the database.
	FieldLastAccess = "last_access"
	// FieldAccessCount holds the string denoting the access_count field in the database.
	FieldAccessCount = "access_count"
	// Table holds the table name of the missionloadbalanceaccess in the database.
	Table = "mission_load_balance_accesses"
)

// Columns holds all SQL columns for missionloadbalanceaccess fields.
var Columns = []string{
	FieldID,
	FieldCreatedBy,
	FieldUpdatedBy,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldMissionID,
	FieldMissionLoadBalanceID,
	FieldLastAccess,
	FieldAccessCount,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedBy holds the default value on creation for the "created_by" field.
	DefaultCreatedBy int64
	// DefaultUpdatedBy holds the default value on creation for the "updated_by" field.
	DefaultUpdatedBy int64
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt time.Time
	// DefaultLastAccess holds the default value on creation for the "last_access" field.
	DefaultLastAccess time.Time
	// DefaultAccessCount holds the default value on creation for the "access_count" field.
	DefaultAccessCount int32
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() int64
)

// OrderOption defines the ordering options for the MissionLoadBalanceAccess queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreatedBy orders the results by the created_by field.
func ByCreatedBy(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedBy, opts...).ToFunc()
}

// ByUpdatedBy orders the results by the updated_by field.
func ByUpdatedBy(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedBy, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByDeletedAt orders the results by the deleted_at field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}

// ByMissionID orders the results by the mission_id field.
func ByMissionID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMissionID, opts...).ToFunc()
}

// ByMissionLoadBalanceID orders the results by the mission_load_balance_id field.
func ByMissionLoadBalanceID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMissionLoadBalanceID, opts...).ToFunc()
}

// ByLastAccess orders the results by the last_access field.
func ByLastAccess(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLastAccess, opts...).ToFunc()
}

// ByAccessCount orders the results by the access_count field.
func ByAccessCount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAccessCount, opts...).ToFunc()
}
