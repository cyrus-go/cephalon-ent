// Code generated by ent, DO NOT EDIT.

package extraserviceorder

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/stark-sim/cephalon-ent/pkg/cep_ent/predicate"
	"github.com/stark-sim/cephalon-ent/pkg/enums"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLTE(FieldID, id))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldUpdatedBy, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldDeletedAt, v))
}

// MissionID applies equality check predicate on the "mission_id" field. It's identical to MissionIDEQ.
func MissionID(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldMissionID, v))
}

// MissionOrderID applies equality check predicate on the "mission_order_id" field. It's identical to MissionOrderIDEQ.
func MissionOrderID(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldMissionOrderID, v))
}

// Amount applies equality check predicate on the "amount" field. It's identical to AmountEQ.
func Amount(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldAmount, v))
}

// SymbolID applies equality check predicate on the "symbol_id" field. It's identical to SymbolIDEQ.
func SymbolID(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldSymbolID, v))
}

// UnitCep applies equality check predicate on the "unit_cep" field. It's identical to UnitCepEQ.
func UnitCep(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldUnitCep, v))
}

// BuyDuration applies equality check predicate on the "buy_duration" field. It's identical to BuyDurationEQ.
func BuyDuration(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldBuyDuration, v))
}

// PlanStartedAt applies equality check predicate on the "plan_started_at" field. It's identical to PlanStartedAtEQ.
func PlanStartedAt(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldPlanStartedAt, v))
}

// PlanFinishedAt applies equality check predicate on the "plan_finished_at" field. It's identical to PlanFinishedAtEQ.
func PlanFinishedAt(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldPlanFinishedAt, v))
}

// MissionBatchID applies equality check predicate on the "mission_batch_id" field. It's identical to MissionBatchIDEQ.
func MissionBatchID(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldMissionBatchID, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLTE(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLTE(FieldUpdatedBy, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLTE(FieldDeletedAt, v))
}

// MissionIDEQ applies the EQ predicate on the "mission_id" field.
func MissionIDEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldMissionID, v))
}

// MissionIDNEQ applies the NEQ predicate on the "mission_id" field.
func MissionIDNEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNEQ(FieldMissionID, v))
}

// MissionIDIn applies the In predicate on the "mission_id" field.
func MissionIDIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldIn(FieldMissionID, vs...))
}

// MissionIDNotIn applies the NotIn predicate on the "mission_id" field.
func MissionIDNotIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNotIn(FieldMissionID, vs...))
}

// MissionOrderIDEQ applies the EQ predicate on the "mission_order_id" field.
func MissionOrderIDEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldMissionOrderID, v))
}

// MissionOrderIDNEQ applies the NEQ predicate on the "mission_order_id" field.
func MissionOrderIDNEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNEQ(FieldMissionOrderID, v))
}

// MissionOrderIDIn applies the In predicate on the "mission_order_id" field.
func MissionOrderIDIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldIn(FieldMissionOrderID, vs...))
}

// MissionOrderIDNotIn applies the NotIn predicate on the "mission_order_id" field.
func MissionOrderIDNotIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNotIn(FieldMissionOrderID, vs...))
}

// AmountEQ applies the EQ predicate on the "amount" field.
func AmountEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldAmount, v))
}

// AmountNEQ applies the NEQ predicate on the "amount" field.
func AmountNEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNEQ(FieldAmount, v))
}

// AmountIn applies the In predicate on the "amount" field.
func AmountIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldIn(FieldAmount, vs...))
}

// AmountNotIn applies the NotIn predicate on the "amount" field.
func AmountNotIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNotIn(FieldAmount, vs...))
}

// AmountGT applies the GT predicate on the "amount" field.
func AmountGT(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGT(FieldAmount, v))
}

// AmountGTE applies the GTE predicate on the "amount" field.
func AmountGTE(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGTE(FieldAmount, v))
}

// AmountLT applies the LT predicate on the "amount" field.
func AmountLT(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLT(FieldAmount, v))
}

// AmountLTE applies the LTE predicate on the "amount" field.
func AmountLTE(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLTE(FieldAmount, v))
}

// SymbolIDEQ applies the EQ predicate on the "symbol_id" field.
func SymbolIDEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldSymbolID, v))
}

// SymbolIDNEQ applies the NEQ predicate on the "symbol_id" field.
func SymbolIDNEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNEQ(FieldSymbolID, v))
}

// SymbolIDIn applies the In predicate on the "symbol_id" field.
func SymbolIDIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldIn(FieldSymbolID, vs...))
}

// SymbolIDNotIn applies the NotIn predicate on the "symbol_id" field.
func SymbolIDNotIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNotIn(FieldSymbolID, vs...))
}

// UnitCepEQ applies the EQ predicate on the "unit_cep" field.
func UnitCepEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldUnitCep, v))
}

// UnitCepNEQ applies the NEQ predicate on the "unit_cep" field.
func UnitCepNEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNEQ(FieldUnitCep, v))
}

// UnitCepIn applies the In predicate on the "unit_cep" field.
func UnitCepIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldIn(FieldUnitCep, vs...))
}

// UnitCepNotIn applies the NotIn predicate on the "unit_cep" field.
func UnitCepNotIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNotIn(FieldUnitCep, vs...))
}

// UnitCepGT applies the GT predicate on the "unit_cep" field.
func UnitCepGT(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGT(FieldUnitCep, v))
}

// UnitCepGTE applies the GTE predicate on the "unit_cep" field.
func UnitCepGTE(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGTE(FieldUnitCep, v))
}

// UnitCepLT applies the LT predicate on the "unit_cep" field.
func UnitCepLT(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLT(FieldUnitCep, v))
}

// UnitCepLTE applies the LTE predicate on the "unit_cep" field.
func UnitCepLTE(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLTE(FieldUnitCep, v))
}

// ExtraServiceTypeEQ applies the EQ predicate on the "extra_service_type" field.
func ExtraServiceTypeEQ(v enums.ExtraServiceType) predicate.ExtraServiceOrder {
	vc := v
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldExtraServiceType, vc))
}

// ExtraServiceTypeNEQ applies the NEQ predicate on the "extra_service_type" field.
func ExtraServiceTypeNEQ(v enums.ExtraServiceType) predicate.ExtraServiceOrder {
	vc := v
	return predicate.ExtraServiceOrder(sql.FieldNEQ(FieldExtraServiceType, vc))
}

// ExtraServiceTypeIn applies the In predicate on the "extra_service_type" field.
func ExtraServiceTypeIn(vs ...enums.ExtraServiceType) predicate.ExtraServiceOrder {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.ExtraServiceOrder(sql.FieldIn(FieldExtraServiceType, v...))
}

// ExtraServiceTypeNotIn applies the NotIn predicate on the "extra_service_type" field.
func ExtraServiceTypeNotIn(vs ...enums.ExtraServiceType) predicate.ExtraServiceOrder {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.ExtraServiceOrder(sql.FieldNotIn(FieldExtraServiceType, v...))
}

// BuyDurationEQ applies the EQ predicate on the "buy_duration" field.
func BuyDurationEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldBuyDuration, v))
}

// BuyDurationNEQ applies the NEQ predicate on the "buy_duration" field.
func BuyDurationNEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNEQ(FieldBuyDuration, v))
}

// BuyDurationIn applies the In predicate on the "buy_duration" field.
func BuyDurationIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldIn(FieldBuyDuration, vs...))
}

// BuyDurationNotIn applies the NotIn predicate on the "buy_duration" field.
func BuyDurationNotIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNotIn(FieldBuyDuration, vs...))
}

// BuyDurationGT applies the GT predicate on the "buy_duration" field.
func BuyDurationGT(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGT(FieldBuyDuration, v))
}

// BuyDurationGTE applies the GTE predicate on the "buy_duration" field.
func BuyDurationGTE(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGTE(FieldBuyDuration, v))
}

// BuyDurationLT applies the LT predicate on the "buy_duration" field.
func BuyDurationLT(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLT(FieldBuyDuration, v))
}

// BuyDurationLTE applies the LTE predicate on the "buy_duration" field.
func BuyDurationLTE(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLTE(FieldBuyDuration, v))
}

// PlanStartedAtEQ applies the EQ predicate on the "plan_started_at" field.
func PlanStartedAtEQ(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldPlanStartedAt, v))
}

// PlanStartedAtNEQ applies the NEQ predicate on the "plan_started_at" field.
func PlanStartedAtNEQ(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNEQ(FieldPlanStartedAt, v))
}

// PlanStartedAtIn applies the In predicate on the "plan_started_at" field.
func PlanStartedAtIn(vs ...time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldIn(FieldPlanStartedAt, vs...))
}

// PlanStartedAtNotIn applies the NotIn predicate on the "plan_started_at" field.
func PlanStartedAtNotIn(vs ...time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNotIn(FieldPlanStartedAt, vs...))
}

// PlanStartedAtGT applies the GT predicate on the "plan_started_at" field.
func PlanStartedAtGT(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGT(FieldPlanStartedAt, v))
}

// PlanStartedAtGTE applies the GTE predicate on the "plan_started_at" field.
func PlanStartedAtGTE(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGTE(FieldPlanStartedAt, v))
}

// PlanStartedAtLT applies the LT predicate on the "plan_started_at" field.
func PlanStartedAtLT(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLT(FieldPlanStartedAt, v))
}

// PlanStartedAtLTE applies the LTE predicate on the "plan_started_at" field.
func PlanStartedAtLTE(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLTE(FieldPlanStartedAt, v))
}

// PlanStartedAtIsNil applies the IsNil predicate on the "plan_started_at" field.
func PlanStartedAtIsNil() predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldIsNull(FieldPlanStartedAt))
}

// PlanStartedAtNotNil applies the NotNil predicate on the "plan_started_at" field.
func PlanStartedAtNotNil() predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNotNull(FieldPlanStartedAt))
}

// PlanFinishedAtEQ applies the EQ predicate on the "plan_finished_at" field.
func PlanFinishedAtEQ(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldPlanFinishedAt, v))
}

// PlanFinishedAtNEQ applies the NEQ predicate on the "plan_finished_at" field.
func PlanFinishedAtNEQ(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNEQ(FieldPlanFinishedAt, v))
}

// PlanFinishedAtIn applies the In predicate on the "plan_finished_at" field.
func PlanFinishedAtIn(vs ...time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldIn(FieldPlanFinishedAt, vs...))
}

// PlanFinishedAtNotIn applies the NotIn predicate on the "plan_finished_at" field.
func PlanFinishedAtNotIn(vs ...time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNotIn(FieldPlanFinishedAt, vs...))
}

// PlanFinishedAtGT applies the GT predicate on the "plan_finished_at" field.
func PlanFinishedAtGT(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGT(FieldPlanFinishedAt, v))
}

// PlanFinishedAtGTE applies the GTE predicate on the "plan_finished_at" field.
func PlanFinishedAtGTE(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldGTE(FieldPlanFinishedAt, v))
}

// PlanFinishedAtLT applies the LT predicate on the "plan_finished_at" field.
func PlanFinishedAtLT(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLT(FieldPlanFinishedAt, v))
}

// PlanFinishedAtLTE applies the LTE predicate on the "plan_finished_at" field.
func PlanFinishedAtLTE(v time.Time) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldLTE(FieldPlanFinishedAt, v))
}

// PlanFinishedAtIsNil applies the IsNil predicate on the "plan_finished_at" field.
func PlanFinishedAtIsNil() predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldIsNull(FieldPlanFinishedAt))
}

// PlanFinishedAtNotNil applies the NotNil predicate on the "plan_finished_at" field.
func PlanFinishedAtNotNil() predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNotNull(FieldPlanFinishedAt))
}

// MissionBatchIDEQ applies the EQ predicate on the "mission_batch_id" field.
func MissionBatchIDEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldEQ(FieldMissionBatchID, v))
}

// MissionBatchIDNEQ applies the NEQ predicate on the "mission_batch_id" field.
func MissionBatchIDNEQ(v int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNEQ(FieldMissionBatchID, v))
}

// MissionBatchIDIn applies the In predicate on the "mission_batch_id" field.
func MissionBatchIDIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldIn(FieldMissionBatchID, vs...))
}

// MissionBatchIDNotIn applies the NotIn predicate on the "mission_batch_id" field.
func MissionBatchIDNotIn(vs ...int64) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.FieldNotIn(FieldMissionBatchID, vs...))
}

// HasMission applies the HasEdge predicate on the "mission" edge.
func HasMission() predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, MissionTable, MissionColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasMissionWith applies the HasEdge predicate on the "mission" edge with a given conditions (other predicates).
func HasMissionWith(preds ...predicate.Mission) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(func(s *sql.Selector) {
		step := newMissionStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasMissionOrder applies the HasEdge predicate on the "mission_order" edge.
func HasMissionOrder() predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, MissionOrderTable, MissionOrderColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasMissionOrderWith applies the HasEdge predicate on the "mission_order" edge with a given conditions (other predicates).
func HasMissionOrderWith(preds ...predicate.MissionOrder) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(func(s *sql.Selector) {
		step := newMissionOrderStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasSymbol applies the HasEdge predicate on the "symbol" edge.
func HasSymbol() predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, SymbolTable, SymbolColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasSymbolWith applies the HasEdge predicate on the "symbol" edge with a given conditions (other predicates).
func HasSymbolWith(preds ...predicate.Symbol) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(func(s *sql.Selector) {
		step := newSymbolStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasMissionBatch applies the HasEdge predicate on the "mission_batch" edge.
func HasMissionBatch() predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, MissionBatchTable, MissionBatchColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasMissionBatchWith applies the HasEdge predicate on the "mission_batch" edge with a given conditions (other predicates).
func HasMissionBatchWith(preds ...predicate.MissionBatch) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(func(s *sql.Selector) {
		step := newMissionBatchStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ExtraServiceOrder) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ExtraServiceOrder) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ExtraServiceOrder) predicate.ExtraServiceOrder {
	return predicate.ExtraServiceOrder(sql.NotPredicates(p))
}
