// Code generated by ent, DO NOT EDIT.

package rechargecampaignrule

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the rechargecampaignrule type in the database.
	Label = "recharge_campaign_rule"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldUpdatedBy holds the string denoting the updated_by field in the database.
	FieldUpdatedBy = "updated_by"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldLittleValue holds the string denoting the little_value field in the database.
	FieldLittleValue = "little_value"
	// FieldLargeValue holds the string denoting the large_value field in the database.
	FieldLargeValue = "large_value"
	// FieldGiftPercent holds the string denoting the gift_percent field in the database.
	FieldGiftPercent = "gift_percent"
	// Table holds the table name of the rechargecampaignrule in the database.
	Table = "recharge_campaign_rules"
)

// Columns holds all SQL columns for rechargecampaignrule fields.
var Columns = []string{
	FieldID,
	FieldCreatedBy,
	FieldUpdatedBy,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldLittleValue,
	FieldLargeValue,
	FieldGiftPercent,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedBy holds the default value on creation for the "created_by" field.
	DefaultCreatedBy int64
	// DefaultUpdatedBy holds the default value on creation for the "updated_by" field.
	DefaultUpdatedBy int64
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt time.Time
	// DefaultLittleValue holds the default value on creation for the "little_value" field.
	DefaultLittleValue int64
	// DefaultLargeValue holds the default value on creation for the "large_value" field.
	DefaultLargeValue int64
	// DefaultGiftPercent holds the default value on creation for the "gift_percent" field.
	DefaultGiftPercent int64
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() int64
)

// OrderOption defines the ordering options for the RechargeCampaignRule queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreatedBy orders the results by the created_by field.
func ByCreatedBy(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedBy, opts...).ToFunc()
}

// ByUpdatedBy orders the results by the updated_by field.
func ByUpdatedBy(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedBy, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByDeletedAt orders the results by the deleted_at field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}

// ByLittleValue orders the results by the little_value field.
func ByLittleValue(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLittleValue, opts...).ToFunc()
}

// ByLargeValue orders the results by the large_value field.
func ByLargeValue(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLargeValue, opts...).ToFunc()
}

// ByGiftPercent orders the results by the gift_percent field.
func ByGiftPercent(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGiftPercent, opts...).ToFunc()
}
